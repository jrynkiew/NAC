FROM ubuntu:22.04

WORKDIR /build

ARG CMAKE_VERSION=3.24.1
ARG GLFW_VERSION=3.3.8
ARG GOSU_VERSION=1.7
ARG NVM_DIR=/build/.nvm
ARG NODE_VERSION=18.13.0
ARG JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/bin/java

SHELL [ "/bin/bash", "-c" ]

RUN set -ex \
    \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get upgrade --no-install-recommends -y \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
        ca-certificates \
        libssl-dev \
        libglu1-mesa-dev \
        xorg-dev \
        wget \
        git \
        vim \
        curl \
        autotools-dev \
        build-essential \
        libtool \
        automake \
        pkg-config \
        python3 \
        default-jre \
        libglfw3-dev \
        jq \
        openssh-server \
    \
    && mkdir -p ${NVM_DIR} \
    \
    && wget -q https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz -O - | tar -xz \
    && git clone https://github.com/emscripten-core/emsdk.git emsdk \
    && wget -O /usr/local/bin/gosu https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture) \
    && wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
    \
    && . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION} \
    && . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION} \
    && . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION} \
    \
    && cd cmake-${CMAKE_VERSION} \
    && ./configure \
        --prefix=/usr/local \
        --parallel=`nproc` \
    && make -j`nproc` \
    && make install \
    && cd .. \
    \
    && cd emsdk \
    && chmod +x emsdk_env.sh \
    && ./emsdk install latest \
    && ./emsdk activate latest \
    && cd .. \
    \
    && apt-get remove --purge -y \
        wget \
        libtool \
    \
    && apt-get clean \
    \
    && rm -r cmake-${CMAKE_VERSION} \
    \
    && useradd -rm -d /home/nac/ -s /bin/bash -g root -G sudo -u 1001 nac \
    \
    && mkdir -p /home/nac/.ssh/ \
    && mkdir -p /run/sshd \
    \
    && touch /home/nac/.ssh/authorized_keys \
    && touch /home/nac/.ssh/id_ed25519.pub \
    && touch /home/nac/.ssh/id_ed25519 \
    && touch /home/nac/.ssh/config \
    \
    && chmod +x /usr/local/bin/gosu \
    && chmod -R 600 /home/nac/.ssh/* \
    && chown -R nac /home/nac/.ssh/ \
    && chown -R nac /build/

WORKDIR /scripts/

COPY ./entrypoint.sh /startup/entrypoint.sh
ENTRYPOINT ["/startup/entrypoint.sh"]

EXPOSE 22
CMD ["/bin/bash"]